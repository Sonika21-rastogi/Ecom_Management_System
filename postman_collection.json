{
  "info": {
    "name": "E-Commerce State Management API",
    "_postman_id": "ecommerce-state-management",
    "description": "Collection demonstrating register, login, product CRUD, cart, checkout, payment and admin flows.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Register User",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": { "mode": "raw", "raw": "{\n  \"name\": \"Alice\",\n  \"email\": \"alice@example.com\",\n  \"password\": \"password123\"\n}" },
        "url": { "raw": "{{baseUrl}}/api/auth/register", "host": ["{{baseUrl}}"], "path": ["api","auth","register"] }
      }
    },
    {
      "name": "Login User",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": { "mode": "raw", "raw": "{\n  \"email\": \"alice@example.com\",\n  \"password\": \"password123\"\n}" },
        "url": { "raw": "{{baseUrl}}/api/auth/login", "host": ["{{baseUrl}}"], "path": ["api","auth","login"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var json = pm.response.json();",
              "pm.environment.set('userToken', json.token);"
            ]
          }
        }
      ]
    },
    {
      "name": "Create Admin (register with adminSecret)",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": { "mode": "raw", "raw": "{\n  \"name\": \"Admin\",\n  \"email\": \"admin@example.com\",\n  \"password\": \"adminpass\",\n  \"role\": \"ADMIN\",\n  \"adminSecret\": \"adminsecret\"\n}" },
        "url": { "raw": "{{baseUrl}}/api/auth/register", "host": ["{{baseUrl}}"], "path": ["api","auth","register"] }
      },
      "description": "Register an admin account by including the adminSecret (matches ADMIN_CREATION_SECRET in .env). After login, set adminToken env var."
    },
    {
      "name": "Login Admin",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": { "mode": "raw", "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"adminpass\"\n}" },
        "url": { "raw": "{{baseUrl}}/api/auth/login", "host": ["{{baseUrl}}"], "path": ["api","auth","login"] }
      },
      "event": [
        { "listen": "test", "script": { "exec": ["var json = pm.response.json();","pm.environment.set('adminToken', json.token);"] } }
      ]
    },
    {
      "name": "Admin Create Product",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Authorization", "value": "Bearer {{adminToken}}" }
        ],
        "body": { "mode": "raw", "raw": "{\n  \"name\": \"Widget A\",\n  \"description\": \"A useful widget\",\n  \"price\": 19.99,\n  \"availableStock\": 100\n}" },
        "url": { "raw": "{{baseUrl}}/api/products", "host": ["{{baseUrl}}"], "path": ["api","products"] }
      }
    },
    {
      "name": "List Products (public)",
      "request": {
        "method": "GET",
        "url": { "raw": "{{baseUrl}}/api/products?page=1&limit=10", "host": ["{{baseUrl}}"], "path": ["api","products"], "query": [{"key":"page","value":"1"},{"key":"limit","value":"10"}] }
      }
    },
    {
      "name": "Add item to Cart",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" },{ "key": "Authorization", "value": "Bearer {{userToken}}" }],
        "body": { "mode": "raw", "raw": "{\n  \"productId\": 1,\n  \"quantity\": 2\n}" },
        "url": { "raw": "{{baseUrl}}/api/cart/items", "host": ["{{baseUrl}}"], "path": ["api","cart","items"] }
      }
    },
    {
      "name": "View Cart",
      "request": {
        "method": "GET",
        "header": [{ "key": "Authorization", "value": "Bearer {{userToken}}" }],
        "url": { "raw": "{{baseUrl}}/api/cart", "host": ["{{baseUrl}}"], "path": ["api","cart"] }
      }
    },
    {
      "name": "Checkout",
      "request": {
        "method": "POST",
        "header": [{ "key": "Authorization", "value": "Bearer {{userToken}}" }],
        "url": { "raw": "{{baseUrl}}/api/orders/checkout", "host": ["{{baseUrl}}"], "path": ["api","orders","checkout"] }
      },
      "event": [{ "listen": "test", "script": { "exec": ["var json = pm.response.json();","pm.environment.set('lastOrderId', json.id || json.orderId || json.id);"] } }]
    },
    {
      "name": "Pay for Order (mock)",
      "request": {
        "method": "POST",
        "header": [{ "key": "Authorization", "value": "Bearer {{userToken}}" }],
        "url": { "raw": "{{baseUrl}}/api/orders/{{lastOrderId}}/pay", "host": ["{{baseUrl}}"], "path": ["api","orders","{{lastOrderId}}","pay"] }
      }
    },
    {
      "name": "Admin List Orders",
      "request": {
        "method": "GET",
        "header": [{ "key": "Authorization", "value": "Bearer {{adminToken}}" }],
        "url": { "raw": "{{baseUrl}}/api/admin/orders", "host": ["{{baseUrl}}"], "path": ["api","admin","orders"] }
      }
    },
    {
      "name": "Admin Update Order Status",
      "request": {
        "method": "PATCH",
        "header": [{ "key": "Content-Type", "value": "application/json" },{ "key": "Authorization", "value": "Bearer {{adminToken}}" }],
        "body": { "mode": "raw", "raw": "{\n  \"status\": \"SHIPPED\"\n}" },
        "url": { "raw": "{{baseUrl}}/api/admin/orders/{{lastOrderId}}/status", "host": ["{{baseUrl}}"], "path": ["api","admin","orders","{{lastOrderId}}","status"] }
      }
    }
  ],
  "event": [],
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:3000" },
    { "key": "userToken", "value": "" },
    { "key": "adminToken", "value": "" },
    { "key": "lastOrderId", "value": "" }
  ]
}
